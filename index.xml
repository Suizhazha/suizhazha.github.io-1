<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jane - A super concise theme for Hugo</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Jane - A super concise theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 16 Jan 2020 00:34:31 +0800</lastBuildDate>
    
        <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Sun, 20 Aug 2017 21:38:52 +0800</pubDate>
      
      <guid>http://localhost:1313/about/</guid>
      
        <description>&lt;p&gt;Hugo is a static site engine written in Go.&lt;/p&gt;
&lt;p&gt;It makes use of a variety of open source projects including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/cobra&#34;&gt;Cobra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/viper&#34;&gt;Viper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/jWalterWeatherman&#34;&gt;J Walter Weatherman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/cast&#34;&gt;Cast&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Learn more and contribute on &lt;a href=&#34;https://github.com/gohugoio&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>浅析URL</title>
      <link>http://localhost:1313/post/%E6%B5%85%E6%9E%90url/</link>
      <pubDate>Thu, 16 Jan 2020 00:34:31 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E6%B5%85%E6%9E%90url/</guid>
      
        <description>&lt;h3 id=&#34;ip-internet-protocal&#34;&gt;IP：网际协议，全称 Internet Protocal。&lt;/h3&gt;
&lt;p&gt;主要有两个功能：标识主机或者网络和寻址。
约定了：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如何定位一台设备。&lt;/li&gt;
&lt;li&gt;如何封装数据报文，以跟其他设备交流。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;IP 分为内网和外网。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;-ip&#34;&gt;外网 IP&lt;/h3&gt;
&lt;p&gt;可在 ip138.com 可查看外网 IP，而重启路由器后，可能会重新分配一个外网 IP。&lt;/p&gt;
&lt;h3 id=&#34;-ip-1&#34;&gt;内网 IP&lt;/h3&gt;
&lt;p&gt;一般格式为 192.168.xxx.xxx，一般路由器 IP 为 192.168.1.1。&lt;/p&gt;
&lt;h3 id=&#34;-ip-2&#34;&gt;几个特殊的 IP&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;127.0.0.1 表示自己。&lt;/li&gt;
&lt;li&gt;localhost 通过 hosts 指定为自己。&lt;/li&gt;
&lt;li&gt;0.0.0.0 不表示任何设备。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;hosts-&#34;&gt;hosts 文件&lt;/h3&gt;
&lt;p&gt;Windows 系统中，hosts 位于 C:\Windows\System32\drivers\etc\hosts 。在 macOS / Linux 系统中，hosts 位于 /etc/hosts。&lt;/p&gt;
&lt;h3 id=&#34;-port&#34;&gt;端口 Port&lt;/h3&gt;
&lt;p&gt;一台机器可以提供不同服务。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;要提供 HTTP 服务最好使用 80 端口。&lt;/li&gt;
&lt;li&gt;要提供 HTTPS 服务最好使用 433 端口。&lt;/li&gt;
&lt;li&gt;要提供 FTP 服务最好使用 21 端口。&lt;/li&gt;
&lt;li&gt;一共有 65535 个端口。（基本上够用）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;heading&#34;&gt;端口规则&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;0 到 1023 号端口是留给系统使用的，拥有了管理员权限后，才能使用 0-1023 号端口。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;其他端口可以给普通用户使用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;http-server 默认使用 8080 端口。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;端口被占用，只能用另一个端口。&lt;/p&gt;
&lt;h4 id=&#34;ip-&#34;&gt;IP 和端口缺一不可！&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;heading-1&#34;&gt;域名&lt;/h3&gt;
&lt;p&gt;域名可以说是一个 IP 地址的别称，为了便于记忆。&lt;/p&gt;
&lt;p&gt;可以 ping 域名来查看 IP 地址。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个域名可以对应不同的 IP（负载均衡），大公司常用，可防止一台机器扛不住。&lt;/li&gt;
&lt;li&gt;一个 IP 可以对应不同域名（共享主机），小公司常用，公用服务器。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;heading-2&#34;&gt;域名类型&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;顶级域名： .com&lt;/li&gt;
&lt;li&gt;二级域名：baidu.com（俗称一级域名）&lt;/li&gt;
&lt;li&gt;三级域名： &lt;a href=&#34;http://www.baidu.com&#34;&gt;www.baidu.com&lt;/a&gt;（俗称二级域名）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;http://www.xxx.com&#34;&gt;www.xxx.com&lt;/a&gt; 和 xxx.com 可能是同一家公司，也可能不是，而且 www 非常多余。&lt;/p&gt;
&lt;h3 id=&#34;dns&#34;&gt;DNS&lt;/h3&gt;
&lt;p&gt;DNS（Domain Name System）将域名和 IP 对应起来。&lt;/p&gt;
&lt;p&gt;比如:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当你输入 baidu.com 时，你的浏览器会向运营商提供的服务器询问 baidu.com 对应什么 IP&lt;/li&gt;
&lt;li&gt;运营商回复 IP 后，浏览器才会向相应 IP 的 80/433 端口发送请求。&lt;/li&gt;
&lt;li&gt;请求的内容即为 baidu.com 的首页。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;80--443-&#34;&gt;80 或 443 窗口&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;服务器默认使用 80 提供 http 服务。&lt;/li&gt;
&lt;li&gt;服务器默认使用 443 提供 https 服务。&lt;/li&gt;
&lt;li&gt;可在开发者工具里查看具体的端口。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;heading-3&#34;&gt;路径&lt;/h3&gt;
&lt;p&gt;用于请求不同的页面，路径是没有后缀，在开发者工具 Network 中可查看。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Learn/HTML&#34;&gt;https://developer.mozilla.org/zh-CN/docs/Learn/HTML&lt;/a&gt;
&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Learn/CSS&#34;&gt;https://developer.mozilla.org/zh-CN/docs/Learn/CSS&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;heading-4&#34;&gt;查询参数&lt;/h3&gt;
&lt;p&gt;而同一页面，同一路径，也可以显示不同内容，主要取决于查询参数。&lt;/p&gt;
&lt;h3 id=&#34;heading-5&#34;&gt;锚点&lt;/h3&gt;
&lt;p&gt;同一页面，同一查询结果，同一内容的不同位置。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/CSS#&#34;&gt;https://developer.mozilla.org/zh-CN/docs/Web/CSS#&lt;/a&gt;参考书
&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/CSS#&#34;&gt;https://developer.mozilla.org/zh-CN/docs/Web/CSS#&lt;/a&gt;教程&lt;/p&gt;
&lt;p&gt;notes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;锚点看起来有中文，但实际不支持中文（通过编码识别）。&lt;/li&gt;
&lt;li&gt;锚点无法在 Network 面板看到，因为锚点不会传给服务器。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;url&#34;&gt;URL&lt;/h3&gt;
&lt;p&gt;完整的 URL 包括&lt;code&gt;[协议类型]://[访问资源需要的凭证信息]@[服务器地址]:[端口号]/[资源层级UNIX文件路径][文件名]?[查询参数]#[锚点]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其中[访问凭证信息]、[端口号]、[查询参数]、[锚点]都属于选填项。&lt;/p&gt;
&lt;p&gt;HTTPS 默认端口 443，HTTP 默认端口 80。&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>CSS知识总结</title>
      <link>http://localhost:1313/post/css%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</link>
      <pubDate>Mon, 13 Jan 2020 22:01:29 +0800</pubDate>
      
      <guid>http://localhost:1313/post/css%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</guid>
      
        <description>&lt;h3 id=&#34;heading&#34;&gt;浏览器渲染过程：&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;根据 HTML 构建 HTML 树（DOM）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文档对象模型(DOM)是 HTML 和 XML 文档的编程接口，它会将 web 页面和脚本或程序语言连接起来。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;根据 CSS 构建 CSS 树（CSSOM）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CSS 对象模型 (CSS Object Model, CSSOM) 是一个存放所有 CSS 选择器与相关特性的树状结构容器，拥有根节点、邻居节点、后代节点、子代节点以及其他关系。 CSSCOM 非常类似于 DOM 文件对象模型 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将两棵树合并成一颗渲染树（render tree）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Layout 布局（文档流，盒模型，计算大小和位置）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Paint 绘制（将边框颜色，文字颜色，阴影等画出来）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Compose 合成（根据层叠关系展示画面）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;heading-1&#34;&gt;如何更新样式：&lt;/h3&gt;
&lt;p&gt;一般用 JS 更新样式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;div.style.background=&#39;red&amp;rsquo;&lt;/li&gt;
&lt;li&gt;div.style.display=&#39;none&amp;rsquo;&lt;/li&gt;
&lt;li&gt;div.classList.add(&amp;lsquo;red&amp;rsquo;)（加样式不如加类）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;heading-2&#34;&gt;三种渲染方式和更新方式：&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;JS/CSS&amp;gt;样式&amp;gt;布局&amp;gt;绘制&amp;gt;合成&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;例如&lt;code&gt;div.remove()&lt;/code&gt;会触发当前消失，其他元素 relayout。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;JS/CSS&amp;gt;样式&amp;gt;绘制&amp;gt;合成&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;例如改变背景颜色，则直接 repaint+composite。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;JS/CSS&amp;gt;样式&amp;gt;合成&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;改变 transform，只需 composite&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Notes：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;必须全屏查看效果，在 iframe 里看问题。&lt;/li&gt;
&lt;li&gt;csstriggers.com 可查看每种属性触发哪些流程。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;css-&#34;&gt;CSS 动画优化&lt;/h3&gt;
&lt;p&gt;详细可查看&lt;!-- raw HTML omitted --&gt;google 团队文章&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JS 优化：使用 requestAnimationFrame 代替 setTimeout 或 setInterval&lt;/li&gt;
&lt;li&gt;CSS 优化：使用 will-change 或 translate&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;transform-&#34;&gt;transform 属性&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;四个常用功能&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;位移 transsform&lt;/p&gt;
&lt;p&gt;&lt;code&gt;transsform:translate(50px);&lt;/code&gt;X 轴位移 50 像素。&lt;/p&gt;
&lt;p&gt;Notes：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若要在 Z 轴（垂直于视点）位移，需要在父元素上添加 perspective 属性。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;transsform:translate(-50%，-50%);&lt;/code&gt;可做绝对定位元素的居中。&lt;/li&gt;
&lt;li&gt;MDN 语法格式很重要！！！&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;缩放 scale：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;transsform:scale(1.5)；&lt;/code&gt;
。用的很少，因为变形，容易出现模糊。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;旋转 rotate：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;transsform:rotate(45deg)；&lt;/code&gt;顺时针旋转 45 度。一般用于 360 度旋转制作 loading，或者按钮的交互（鼠标移到按钮上就转一圈），多看 MDN 文档。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;倾斜 skew：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;transsform:skewX(15deg)；&lt;/code&gt;X 轴倾斜 15 度。用得较少，用时搜 MDN 文档。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;transition&#34;&gt;transition&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;作用：补全中间帧。&lt;/p&gt;
&lt;p&gt;例如：
&lt;img src=&#34;https://user-gold-cdn.xitu.io/2020/1/13/16f9ee7518795180?w=781&amp;amp;h=397&amp;amp;f=png&amp;amp;s=53303&#34; alt=&#34;&#34;&gt;&lt;!-- raw HTML omitted --&gt;效果&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;transition：属性名 时长 过渡时间 延迟；&lt;/p&gt;
&lt;p&gt;&lt;code&gt;transition：right 10s linear；&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可用逗号分隔开两个不同属性&lt;/p&gt;
&lt;p&gt;&lt;code&gt;transition：right 10s,top 10s；&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可用 all 代表所有属性&lt;/p&gt;
&lt;p&gt;&lt;code&gt;transition：all 10s linear；&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;过渡方式：linear，ease，ease-in，ease-out，
ease-in-out，cubic-bezier，step- start，step-end，steps。
具体效果查看&lt;!-- raw HTML omitted --&gt;MDN&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Notes：并非所有属性都使用 transition。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;display:block;=&amp;gt;display:none;不能过渡，而修改成透明度 opacity，也只是看不见了，位置还一直占着。
一般改成 visibility:visible=&amp;gt;hidden，visibility 也是占位置的。&lt;/li&gt;
&lt;li&gt;background 背景颜色可以过渡。&lt;/li&gt;
&lt;li&gt;opacity 透明度可以过渡，但不推荐。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;过渡必须有起始，一般只有一次或两次动画，比如 hover 和非 hover 状态的过渡。&lt;/p&gt;
&lt;p&gt;若有中间过渡，可以使用两次 transform，用 setTimeout 或者监听 transitionend 事件确认中间点。&lt;/p&gt;
&lt;p&gt;也可以使用 animation（声明关键帧，添加动画）来实现。&lt;/p&gt;
&lt;h3 id=&#34;animation&#34;&gt;animation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;keyframes 语法：
一种是 from to:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;@keyframes slidein {
  from {
    transform: translateX(0%);
  }

  to {
    transform: translateX(100%);
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;或者百分数&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@keyframes identifier {
  0% { top: 0; left: 0; }
  30% { top: 50px; }
  68%, 72% { left: 50px; }
  100% { top: 100px; left: 100%; }
}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;语法：animation:时长|过渡方式|延迟|次数|方向|填充模式|是否暂停|动画名；&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;时长：1s 或者 1000ms&lt;/li&gt;
&lt;li&gt;过渡方式：跟 transition 取值一样，如 linear&lt;/li&gt;
&lt;li&gt;次数：数字 或着 infinite（无限次）&lt;/li&gt;
&lt;li&gt;方向： - normal：每个循环内动画向前循环，换言之，每个动画循环结束，动画重置到起点重新开始，这是默认属性。 - reverse：反向运行动画，每周期结束动画由尾到头运行。 - alternate：动画交替反向运行，反向运行时，动画按步后退，同时，带时间功能的函数也反向，比如，ease-in 在反向时成为 ease-out。 - alternate-reverse：反向交替，反向开始交替
动画第一次运行时是反向的，然后下一次是正向，后面依次循环。&lt;/li&gt;
&lt;li&gt;填充模式：
&lt;ul&gt;
&lt;li&gt;none：这是默认值，由该元素的 CSS 规则来显示该元素。&lt;/li&gt;
&lt;li&gt;forwards：动画将停留在最后一个关键帧。&lt;/li&gt;
&lt;li&gt;backwards：动画将在应用于目标时立即应用第一个关键帧中定义的值，并在 animation-delay 期间保留此值。第一个关键帧取决于 animation-direction 的值。&lt;/li&gt;
&lt;li&gt;both：动画将遵循 forwards 和 backwards 的规则，从而在两个方向上扩展动画属性。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;是否暂停：
&lt;ul&gt;
&lt;li&gt;paused：当前动画已被停止。&lt;/li&gt;
&lt;li&gt;running：当前动画正在运行。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;note：以上所有属性都有对应的单独属性。只改一个属性的话就要单独写。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>CSS布局和定位</title>
      <link>http://localhost:1313/post/css%E5%B8%83%E5%B1%80%E5%92%8C%E5%AE%9A%E4%BD%8D/</link>
      <pubDate>Fri, 10 Jan 2020 19:54:28 +0800</pubDate>
      
      <guid>http://localhost:1313/post/css%E5%B8%83%E5%B1%80%E5%92%8C%E5%AE%9A%E4%BD%8D/</guid>
      
        <description>&lt;h3 id=&#34;heading&#34;&gt;布局是什么：&lt;/h3&gt;
&lt;p&gt;把页面分成一块一块，按左中右，上中下等排列。&lt;/p&gt;
&lt;h3 id=&#34;heading-1&#34;&gt;布局分类:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;固定宽度布局，例如淘宝网， 一般宽度 960/1000/1024px。&lt;/li&gt;
&lt;li&gt;不固定宽度布局，例如手机端，主要靠文档流原理布局。
文档流本身就是自适应的，不需要额外添加样式。&lt;/li&gt;
&lt;li&gt;响应式布局，pc 上固定宽度，手机上不固定宽度，是一种混合布局。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;heading-2&#34;&gt;布局思路：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;从大到小:先定大局，再完善每个小布局。&lt;/li&gt;
&lt;li&gt;从小到大:先完成小布局，再组合成大布局，推荐新手。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;heading-3&#34;&gt;三种布局套路：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;float 布局：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. 子元素上加float：left和width。
2. 在父元素上加.clearfix。

例如：

![](https://user-gold-cdn.xitu.io/2020/1/7/16f801aab2022468?w=1279&amp;amp;h=699&amp;amp;f=png&amp;amp;s=116392)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notes：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;有时最后一个元素不加 width，留些空间，可加上最大宽度&lt;code&gt;max-width：100px；&lt;/code&gt;若加上 width 会出现下图情况:
&lt;img src=&#34;https://user-gold-cdn.xitu.io/2020/1/7/16f80226f625feb8?w=139&amp;amp;h=51&amp;amp;f=png&amp;amp;s=3749&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不需要做响应式，float 布局专为 IE 准备。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解决 IE6/7 存在双倍 margin 的 bug，&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; 1. 针对IE6/7，把margin减半，如下图，则IE上显示5px乘2，正常浏览器上显示10px：
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://user-gold-cdn.xitu.io/2020/1/7/16f803169194f6f8?w=267&amp;amp;h=55&amp;amp;f=png&amp;amp;s=8283&#34; alt=&#34;&#34;&gt; 2. 加一个 display：inline-block； - 若图片下有多余的东西：
添加
&lt;code&gt;vertical-align: top;&lt;/code&gt;
或者&lt;code&gt;vertical-align: middle;&lt;/code&gt;
&lt;img src=&#34;https://user-gold-cdn.xitu.io/2020/1/7/16f806065bc2dd9d?w=403&amp;amp;h=107&amp;amp;f=png&amp;amp;s=30878&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有时 border 调试会干扰 width，可用 outline 调试。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果有块级元素且 width 固定，则左右 margin 的 auto 可让元素自动居中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关于平均布局，计算出 x，y 的值，必要时中间加一层 div，用到负 margin，值为 y 的值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;flex 布局：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;flex container（容器）样式：一般作父元素

 - 让一个元素变成flex容器：
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://user-gold-cdn.xitu.io/2020/1/8/16f8519c00157e08?w=292&amp;amp;h=136&amp;amp;f=png&amp;amp;s=10623&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;justify-content 属性：将 flex 元素与主轴对齐。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flex-start: 元素和容器的左端对齐&lt;/li&gt;
&lt;li&gt;flex-end: 元素和容器的右端对齐&lt;/li&gt;
&lt;li&gt;center: 元素在容器里居中&lt;/li&gt;
&lt;li&gt;space-between:元素之间保持相等的距离&lt;/li&gt;
&lt;li&gt;space-around:元素周围保持相等的距离&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;align-items 属性：在交叉轴上对齐多个元素。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flex-start: 元素与容器的顶部对齐&lt;/li&gt;
&lt;li&gt;flex-end: 元素与容器的底部对齐。&lt;/li&gt;
&lt;li&gt;center: 元素纵向居中&lt;/li&gt;
&lt;li&gt;baseline: 元素在容器的基线位置显示&lt;/li&gt;
&lt;li&gt;stretch: 元素被拉伸以填满整个容器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;flex-direction 属性:决定主轴的方向。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;row: 元素摆放的方向和文字方向一致&lt;/li&gt;
&lt;li&gt;row-reverse: 元素摆放的方向和文字方向相反&lt;/li&gt;
&lt;li&gt;column: 元素从上放到下&lt;/li&gt;
&lt;li&gt;column-reverse: 元素从下放到上&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;flex-wrap 属性：定义元素必须在一行，或者自动换行。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;nowrap: 所有的元素都在一行&lt;/li&gt;
&lt;li&gt;wrap: 元素自动换成多行&lt;/li&gt;
&lt;li&gt;wrap-reverse: 元素自动换成逆序的多行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;flex-flow 属性：
flex-flow 属性包括 flex-direction 和 flex-wrap 两个属性，这个缩写属性接受两个属性的值，两个值中间以空格隔开。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;例如：`flex-flow: row wrap;`设置行并自动换行。
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;align-content 属性：决定行与行之间的间隔，而 align-items 决定元素整体在容器的什么位置。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flex-start: 多行都集中在顶部。&lt;/li&gt;
&lt;li&gt;flex-end: 多行都集中在底部。&lt;/li&gt;
&lt;li&gt;center: 多行居中。&lt;/li&gt;
&lt;li&gt;space-between: 行与行之间保持相等距离。&lt;/li&gt;
&lt;li&gt;space-around: 每行的周围保持相等距离。&lt;/li&gt;
&lt;li&gt;stretch: 每一行都被拉伸以填满容器。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;flex items（项目）样式：一般作子元素&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://user-gold-cdn.xitu.io/2020/1/9/16f89d7b43b2400c?w=189&amp;amp;h=186&amp;amp;f=png&amp;amp;s=23768&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;order 属性:决定 flex 元素的顺序，元素的属性默认值为 0，还可设置属性为正数或负数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;flex-grow 属性：决定 flex 元素的拉伸程度，元素的属性默认值为 0，还可设置属性为正数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;flex-shrink 属性：决定了 flex 元素的收缩程度，flex 元素仅在默认宽度之和大于容器的时候才会发生收缩，其收缩的大小是依据 flex-shrink 的值，属性默认值为 0，还可设置属性为正数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;flex-basis 属性：决定了 flex 元素的基准宽度，如果不使用 box-sizing 改变盒模型的话，那么这个属性就决定了 flex 元素的内容盒（content-box）的尺寸，属性默认值为 auto。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;flex-grow、flex-shrink 和 flex-basis 属性可以缩写，例如:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  flex-grow: 1;
  flex-shrink: 0;
  flex-basis: 100px;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以写成：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  flex： 1 0 100px;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;align-self 属性：在交叉轴上对齐一个元素，其值和 align-items 相同，但会覆盖 align-items 属性值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;-flex--flex--flex-httpsflexboxfroggycomzh-cn&#34;&gt;推荐一款 flex 青蛙游戏，轻松愉快学习 flex 布局，以上 flex 元素属性解释也参考此游戏，详细可访问https://flexboxfroggy.com/#zh-cn。&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;grid 布局：功能最强大的布局方案，但目前兼容性还不好。也分 container 和 items 样式，使用 grid-template-rows 和 grid-template-columns 属性来定义网格的 columns 和 rows，也可使用 grid-column-start, grid-column-end, grid-row-start 和 grid-row-end 属性定位网格线。
例如：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;.container {
           display: grid;
           grid-template-columns: 1fr 1fr 1fr;
           grid-template-rows: 100px 100px;
         }
.items{
     grid-column-start: 1;
     grid-column-end: 2;
     grid-row-start: 1;
     grid-row-end: 2;
 }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://user-gold-cdn.xitu.io/2020/1/9/16f8a5ad65608989?w=651&amp;amp;h=335&amp;amp;f=png&amp;amp;s=13874&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;grid-&#34;&gt;grid 尤其适合不规则的布局。&lt;/h4&gt;
&lt;hr&gt;
&lt;h3 id=&#34;css-&#34;&gt;CSS 定位：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;position&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;static：默认值，待在文档流里&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;relative：相对定位，未脱离文档流，可在不改变页面布局的前提下调整元素位置。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;现在已经很少用作位移，常用作 absolute 父元素。&lt;/li&gt;
&lt;li&gt;配合 z-index：默认值 auto，不创建新层叠上下文，还可取正负数。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;absolute：绝对定位，相对于祖先元素中最近的一个定位元素定位的，定位基准是祖先非 static 的定位元素。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;脱离原来位置，另起一层，如对话框关闭按钮或鼠标提示。&lt;/li&gt;
&lt;li&gt;配合 z-index。&lt;/li&gt;
&lt;li&gt;和 relative 父元素配合使用。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Notes：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  1.white-space:nowrap;文字内容不准换行。
  2.善用left：100%。
  3.善用left：50%；加负margin。
  4.有些浏览器不写top/left会位置错乱。
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;fixed：固定定位，定位基准是 viewport，手机上尽量不要用这个属性（坑）。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;用于烦人的广告或者回到顶部按钮。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配合 z-index。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;sticky：沾滞定位，适合导航，目前兼容性很差。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>CSS基础</title>
      <link>http://localhost:1313/post/css%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Mon, 06 Jan 2020 16:40:06 +0800</pubDate>
      
      <guid>http://localhost:1313/post/css%E5%9F%BA%E7%A1%80/</guid>
      
        <description>&lt;h2 id=&#34;-css--mdn-&#34;&gt;今天在谷里学习了 css 基础知识，结合维基百科和 mdn，写下此博客跟大家分享，如有错误之处，欢迎指正（没有奖励 😝）。&lt;/h2&gt;
&lt;h2 id=&#34;heading&#34;&gt;目录：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;css 历史&lt;/li&gt;
&lt;li&gt;体系化学习&lt;/li&gt;
&lt;li&gt;文档流&lt;/li&gt;
&lt;li&gt;盒模型&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;css-&#34;&gt;css 历史&lt;/h3&gt;
&lt;p&gt;css：中文为层叠样式表（又称串样式列表、级联样式表、串接样式表、阶层式样式表）是一种用来为结构化文档（如 HTML 文档或 XML 应用）添加样式（字体、间距和颜色等）的计算机语言，由 W3C 定义和维护。当前使用最广泛的版本是 CSS2.1，为 W3C 的推荐标准。CSS3 现在已被大部分现代浏览器支持，而下一版的 CSS4 仍在开发中。1994 年，哈肯·维姆·莱提出了 CSS 的最初建议。&lt;/p&gt;
&lt;p&gt;层叠:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;样式层叠：可以多次对同一选择器进行样式声明。&lt;/li&gt;
&lt;li&gt;选择器层叠：可以用不同选择器对同一个元素进行样式声明。&lt;/li&gt;
&lt;li&gt;文件层叠：可以用多个文件进行层叠。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;note：这些特性使得 css 极度灵活，也为 css 被吐槽留下了隐患。&lt;/p&gt;
&lt;h3 id=&#34;-css21-ie-css3-ie8-&#34;&gt;目前 CSS2.1 为使用最广泛的版本（IE 支持），CSS3 为最新版本（IE8 部分支持）。&lt;/h3&gt;
&lt;p&gt;使用 caniuse.com 检查各种浏览器支持哪些特性。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;heading-1&#34;&gt;体系化学习&lt;/h3&gt;
&lt;h4 id=&#34;heading-2&#34;&gt;怎样学习一门语言：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;语法（怎样写代码）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;语法 1：样式语法&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  选择器{
    属性名:属性值;
    /*注释*/
   }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notes：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;所有符号都是英文符号。&lt;/li&gt;
&lt;li&gt;区分大小写。&lt;/li&gt;
&lt;li&gt;没有//注释&lt;/li&gt;
&lt;li&gt;最后一个分号可省略，但建议不要省略。&lt;/li&gt;
&lt;li&gt;任何一个地方写错了，都不会报错，浏览器会忽略。&lt;/li&gt;
&lt;li&gt;若想知道写错，&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;语法 2:@语法&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   @charset &amp;quot;UTF-8&amp;quot;;
   @import url(css路径);
   @media (min-width: 100px)and (max-width:200px){
      语法1
      }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notes:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;@charset 必须放在第一行。&lt;/li&gt;
&lt;li&gt;前两个@语法都必须以;结尾。&lt;/li&gt;
&lt;li&gt;@media 语法以后在讲。&lt;/li&gt;
&lt;li&gt;charset 是字符集的意思，但 UTF-8 是字符编码 encoding，为历史遗留问题。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;调试（查找代码错误）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://jigsaw.w3.org/css-validator/&#34;&gt;https://jigsaw.w3.org/css-validator/&lt;/a&gt;将代码粘贴上去即可，不推荐&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;vscode 颜色报错，位置不大准。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WebStorm 看颜色，位置准确。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Chrome 开发者工具看警告。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. 找到标签
2. 是否有选择器
3. 样式是否被划掉
4. 样式是否被警告
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;
&lt;p&gt;Border 调试法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. 找到怀疑元素
2. 给该元素加一个border
3. 若border没生效，说明选择器错了或语法错了
4. 若border生效了，看看边界是否符合预期
5. bug解决了删除border
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;note：&lt;/p&gt;
&lt;p&gt;CSS 的 border 调试法相当于 JS 的 log 调试法。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;查资料
&lt;ol&gt;
&lt;li&gt;mdn&lt;/li&gt;
&lt;li&gt;css tricks&lt;/li&gt;
&lt;li&gt;张鑫旭博客&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;标准制定者 w3c
&lt;ol&gt;
&lt;li&gt;all css specifications&lt;/li&gt;
&lt;li&gt;css2.1 中文版&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;heading-3&#34;&gt;如何学&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;抄文档，抄老师&lt;/li&gt;
&lt;li&gt;在自己电脑上运行&lt;/li&gt;
&lt;li&gt;加入自己的想法，重新运行并调试。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;heading-4&#34;&gt;文档流&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;流动方向&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;inline 元素从左到右，到达最右边才会换行，字节会断开。&lt;/li&gt;
&lt;li&gt;block 元素从上到下，每一个都另起一行。&lt;/li&gt;
&lt;li&gt;inline-block 元素也是从左到右，字节不会断开。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;宽度&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;inline 元素默认宽度为内部 inline 元素的和，inline 元素内不能存在 block 元素，不能用 width 指定，白写。&lt;/li&gt;
&lt;li&gt;block 元素默认自动计算宽度，不是也不能写 width:100%;，会出 bug，一般 width 用 px 或者 em 指定。&lt;/li&gt;
&lt;li&gt;inline-block 元素结合两者特点，宽度默认跟 inline 元素一样，但可用 width 指定。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;高度&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;inline 元素高度由 line-height 间接决定，与 height，padding 无关。&lt;/li&gt;
&lt;li&gt;block 元素高度由内部文档流元素决定，
可以设置 height。&lt;/li&gt;
&lt;li&gt;inline-block 元素跟 block 元素基本类似，可以设置 height。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;overflow
overflow 还可设置 overflow-x 和 overflow-y。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;visibl：默认值。内容不会被剪裁，可以呈现在元素框之外。&lt;/li&gt;
&lt;li&gt;hidden：内容将被剪裁以适合填充框。 不提供滚动条。&lt;/li&gt;
&lt;li&gt;scroll：内容将被剪裁以适合填充框。 浏览器显示滚动条，无论是否实际剪切了任何内容。（这可以防止滚动条在内容更改时出现或消失。）打印机仍可能打印溢出的内容。&lt;/li&gt;
&lt;li&gt;auto：如果内容适合填充框内部，则看起来与可见内容相同。如果内容溢出，桌面浏览器会提供滚动条。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;脱离文档流&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;![](https://user-gold-cdn.xitu.io/2020/1/7/16f7ed138d0d84fe?w=540&amp;amp;h=307&amp;amp;f=png&amp;amp;s=49695)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;或&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;![](https://user-gold-cdn.xitu.io/2020/1/7/16f7ed38d08b9283?w=533&amp;amp;h=349&amp;amp;f=png&amp;amp;s=52145)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;效果为：
&lt;img src=&#34;https://user-gold-cdn.xitu.io/2020/1/7/16f7ed1f8ecf0104?w=272&amp;amp;h=80&amp;amp;f=png&amp;amp;s=5398&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;heading-5&#34;&gt;盒模型&lt;/h3&gt;
&lt;p&gt;CSS 盒模型有两种，一种是 content-box（内容盒） 一种是 border-box（边框盒）。&lt;/p&gt;
&lt;p&gt;content-box 的宽度 width 表示内容区宽度，不包含 padding 和 border；
而 border-box 的宽度 width 表示内容区 + padding + border 的总和。
一般优先使用后者（border-box）。&lt;/p&gt;
&lt;p&gt;即下图：
&lt;img src=&#34;https://user-gold-cdn.xitu.io/2020/1/7/16f7ee12704336c8?w=793&amp;amp;h=396&amp;amp;f=png&amp;amp;s=80174&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;margin-&#34;&gt;margin 合并：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;两个孩子之间的上下 margin 会合并：
&lt;img src=&#34;https://user-gold-cdn.xitu.io/2020/1/7/16f7eed63dee59b9?w=812&amp;amp;h=354&amp;amp;f=png&amp;amp;s=70930&#34; alt=&#34;&#34;&gt;
css 要求 margin 不用分两个单独写，直接合并就好。
&lt;img src=&#34;https://user-gold-cdn.xitu.io/2020/1/7/16f7eef242913a14?w=811&amp;amp;h=446&amp;amp;f=png&amp;amp;s=69168&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第一个孩子和最后一个孩子的上下 margin，可以和他们的父母合并：
&lt;img src=&#34;https://user-gold-cdn.xitu.io/2020/1/7/16f7fcb7e48d3d64?w=1127&amp;amp;h=588&amp;amp;f=png&amp;amp;s=132611&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>HTML重点标签</title>
      <link>http://localhost:1313/post/html%E9%87%8D%E7%82%B9%E6%A0%87%E7%AD%BE/</link>
      <pubDate>Fri, 03 Jan 2020 22:14:28 +0800</pubDate>
      
      <guid>http://localhost:1313/post/html%E9%87%8D%E7%82%B9%E6%A0%87%E7%AD%BE/</guid>
      
        <description>&lt;p&gt;最近两天看了饥人谷的 HTML 网课，结合 mdn 文档写了篇博客，分享给大家。如有错误之处，欢迎指正！（没有奖励 😝）&lt;/p&gt;
&lt;h3 id=&#34;a-&#34;&gt;a 标签&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;&amp;quot; target=&amp;quot;&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;heading&#34;&gt;属性：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;href：超链接&lt;/li&gt;
&lt;li&gt;target：打开超链接窗口方式
（http-server -c-1 或着 parcel+文件名来打开 vscode 网址）&lt;/li&gt;
&lt;li&gt;download 下载网页（很多浏览器不支持）&lt;/li&gt;
&lt;li&gt;rel=noopener（防止一个 bug，以后会讲）&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;a--href-&#34;&gt;a 的 href 取值：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;网址：
&lt;ol&gt;
&lt;li&gt;https://网址&lt;/li&gt;
&lt;li&gt;http://网址&lt;/li&gt;
&lt;li&gt;//网址（最高级，推荐。查看：开发者工具，勾选 preserve log,浏览器自动补全跳转）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;路径
&lt;ol&gt;
&lt;li&gt;/a/b/c 以及 a/b/c（当前目录下查找）&lt;/li&gt;
&lt;li&gt;index.com 以及./index.com（都是当前目录下查找）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;伪协议
&lt;ol&gt;
&lt;li&gt;Javascript:;&lt;code&gt;&amp;lt;a href=&amp;quot;Javascript:;&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;为了直接执行 js，现在常作点击之后无动作的 a 标签）&lt;/li&gt;
&lt;li&gt;mailto:邮箱&lt;code&gt;&amp;lt;a href=&amp;quot;mailto:573505403@qq.com&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;tel:手机号（简历用）&lt;code&gt;&amp;lt;a href=&amp;quot;tel:17853318194&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;id :&lt;code&gt;&amp;lt;a href=&amp;quot;#xxx&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;（内部锚点，跳转到指定标签位置）&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;a--targe-&#34;&gt;a 的 targe 取值：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;内置名字：
&lt;ol&gt;
&lt;li&gt;_blank（在新窗口打开）&lt;/li&gt;
&lt;li&gt;_self（在当前窗口打开）&lt;/li&gt;
&lt;li&gt;_top（在最顶层窗口打开）&lt;/li&gt;
&lt;li&gt;_parent（在父级窗口打开）&lt;/li&gt;
&lt;li&gt;xxx（有 xxx 窗口就使用，没有就在新窗口打开就命名新窗口为 xxx，多链接看效果）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;iframe-&#34;&gt;iframe 标签：&lt;/h3&gt;
&lt;p&gt;内嵌窗口，已经很少使用，现在都用 ajax 方式。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;table-&#34;&gt;table 标签&lt;/h3&gt;
&lt;p&gt;table 内只能有 thead，tbody，tfoot 标签，包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tr：table 一行&lt;/li&gt;
&lt;li&gt;th：table 表头&lt;/li&gt;
&lt;li&gt;td：table 数据
table 三个标签可以不按顺序写，浏览器自动纠正顺序。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;heading-1&#34;&gt;相关样式：&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;table-layout：
用于布局单元格，行和列的算法。其属性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;auto：浏览器采用自动表格布局算法对表格布局。表格及单元格的宽度取决于其包含的内容。&lt;/li&gt;
&lt;li&gt;fixed：表格和列的宽度通过表格的宽度来设置，某一列的宽度仅由该列首行的单元格决定。在当前列中，该单元格所在行之后的行并不会影响整个列宽。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;border-collapse：用来决定表格的边框是分开的还是合并的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;collapse：合并，相邻的单元格共用同一条边框。&lt;/li&gt;
&lt;li&gt;separate：分开，默认值。每个单元格拥有独立的边框。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;img-&#34;&gt;img 标签：&lt;/h3&gt;
&lt;p&gt;发出 get 请求，展示一张图片。&lt;/p&gt;
&lt;h4 id=&#34;heading-2&#34;&gt;属性：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;src：必须存在，包含图片的网络地址或文件路径。&lt;/li&gt;
&lt;li&gt;alt：不一定存在，包含对图像的文本描述，加载失败会提示代替的文本。&lt;/li&gt;
&lt;li&gt;weight：只写高度，宽度会自适应。&lt;/li&gt;
&lt;li&gt;height：只写宽度，高度会自适应。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;note:永远不要让图片变形！可以只写高度或宽度。&lt;/p&gt;
&lt;h4 id=&#34;js-&#34;&gt;js 事件:&lt;/h4&gt;
&lt;p&gt;onload/onerror:监听图片是否加载成功。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://user-gold-cdn.xitu.io/2020/1/3/16f6a81fca1ffd9f?w=275&amp;amp;h=118&amp;amp;f=png&amp;amp;s=31091&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;heading-3&#34;&gt;响应式：&lt;/h4&gt;
&lt;p&gt;先所有元素 css reset，加句
&lt;code&gt;img{max-width：100%}&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;form-&#34;&gt;form 标签：&lt;/h3&gt;
&lt;p&gt;表单标签，内一般含有输入框和提交按钮（input 标签）。作用：发送一个 get 或 post 请求，然后刷新页面。&lt;/p&gt;
&lt;h4 id=&#34;heading-4&#34;&gt;属性：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;action：处理此表单信息所在的 URL。&lt;/li&gt;
&lt;li&gt;method：可使用 HTTP post 或 get 方式来提交表单。&lt;/li&gt;
&lt;li&gt;autocomplete：浏览器自动填充,使用 on 或 off 来打开或着关闭此功能。&lt;/li&gt;
&lt;li&gt;target：在提交表单之后，在哪个页面显示收到的回复，包括_self，_blank，_top 和_parent。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;heading-5&#34;&gt;事件：&lt;/h4&gt;
&lt;p&gt;onsubmit：用户点击提交按钮后触发。提交按钮可使用 value 更改提交按钮名称。
例如：&lt;code&gt;&amp;lt;input type=&amp;quot;submit&amp;quot; value=&amp;quot;发射&amp;quot;&amp;gt;&lt;/code&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;或者&lt;code&gt;&amp;lt;button type=&amp;quot;submit&amp;quot;&amp;gt;发射&amp;lt;/button&amp;gt;&lt;/code&gt;&lt;!-- raw HTML omitted --&gt;发射&lt;!-- raw HTML omitted --&gt;。&lt;/p&gt;
&lt;p&gt;note:两个区别 input 内不能再加其他标签，只能是纯文本，而 button 可以，甚至可以加图片。例如：&lt;code&gt;&amp;lt;button type=&amp;quot;submit&amp;quot;&amp;gt;&amp;lt;strong&amp;gt;发射&amp;lt;/strong&amp;gt;&amp;lt;/button&amp;gt;&lt;/code&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;发射&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;input-&#34;&gt;input 标签：&lt;/h3&gt;
&lt;p&gt;为了让用户输入内容。&lt;/p&gt;
&lt;h4 id=&#34;heading-6&#34;&gt;常用属性：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;text：单行文本框，默认 type。&lt;/li&gt;
&lt;li&gt;color：颜色控件。&lt;/li&gt;
&lt;li&gt;password：值被遮盖的单行文本字段。&lt;/li&gt;
&lt;li&gt;radio：单选按钮，name 属性使用同一个值可实现二选一。&lt;/li&gt;
&lt;li&gt;checkbox：多选按钮，name 属性使用同一个值，使其在同一数组中。&lt;/li&gt;
&lt;li&gt;file：选择文件，多选文件可添加 multiple 属性。&lt;/li&gt;
&lt;li&gt;hidden：隐藏的控件，用于 js 自动填入 id，字符串之类的。&lt;/li&gt;
&lt;li&gt;image：图片提交按钮。可以使用 height 和 width 属性定义图片的大小。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;heading-7&#34;&gt;事件：&lt;/h4&gt;
&lt;p&gt;onchange：用户输入改变时触发。
onfocus：用户鼠标集中时触发。
onblur：用户鼠标离开时触发。&lt;/p&gt;
&lt;h4 id=&#34;heading-8&#34;&gt;验证器：&lt;/h4&gt;
&lt;p&gt;HTML5 新增功能。例如必须提交文本：&lt;code&gt;&amp;lt;input type=&amp;quot;text&amp;quot; required&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h4 id=&#34;heading-9&#34;&gt;注意事项：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;一般不监听input的click事件。&lt;/li&gt;
&lt;li&gt;form内的input要有name。&lt;/li&gt;
&lt;li&gt;form内放一个type=submit才能触发submit事件。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&#34;heading-10&#34;&gt;其他标签:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;textarea：多行文本框。固定文本框大小可用&lt;code&gt;&amp;lt;textarea style=&amp;quot;resize: none;&amp;quot;&amp;gt;&amp;lt;/textarea&amp;gt;&lt;/code&gt;具体大小可用 width，height 属性固定。&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;select:选择标签，例如：
&lt;code&gt;&amp;lt;select&amp;gt;&amp;lt;option value=&amp;quot;1&amp;quot;&amp;gt;周一&amp;lt;/option&amp;gt;&amp;lt;option value=&amp;quot;1&amp;quot;&amp;gt;周二&amp;lt;/option&amp;gt;&amp;lt;/select&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;请选择&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;周一&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;周二&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>使用hugo搭建个人博客mac版</title>
      <link>http://localhost:1313/post/%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2mac%E7%89%88/</link>
      <pubDate>Wed, 01 Jan 2020 22:15:24 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2mac%E7%89%88/</guid>
      
        <description>&lt;h2 id=&#34;-hugo-&#34;&gt;大家好，今天给大家分享下如何使用 hugo 搭建个人博客&lt;/h2&gt;
&lt;h3 id=&#34;1-hugo&#34;&gt;1.安装 hugo&lt;/h3&gt;
&lt;p&gt;在终端中输入
&lt;code&gt;brew install hugo&lt;/code&gt;安装。&lt;/p&gt;
&lt;p&gt;安装成功后可输入&lt;code&gt;hugo version&lt;/code&gt;查看版本信息。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;2&#34;&gt;2.创建新网址&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;hugo new site quickstart&lt;/code&gt;
其中&lt;code&gt;quickstart&lt;/code&gt;更改为&lt;code&gt;用户名.github.io-creator&lt;/code&gt;（用户名为 github 用户名，需要小写）
使用&lt;code&gt;code 用户名.github.io-creator&lt;/code&gt;使用 vscode 查看目录&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;3&#34;&gt;3.添加一个主题&lt;/h3&gt;
&lt;p&gt;在 vscode 目录下打开新的终端，输入
&lt;code&gt;git init&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后，将默认主题添加到站点配置中：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;echo &#39;theme = &amp;quot;ananke&amp;quot;&#39; &amp;gt;&amp;gt; config.toml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;还可自定义主题，具体可浏览&lt;!-- raw HTML omitted --&gt;hugo&lt;!-- raw HTML omitted --&gt;官网查看教程。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;4&#34;&gt;4.添加一些文件&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;hugo new posts/my-first-post.md&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其中&lt;code&gt;my-first-post&lt;/code&gt;可更改博客名。
可从下图内容后编辑
&lt;img src=&#34;https://user-gold-cdn.xitu.io/2020/1/4/16f707cfef95191f?w=315&amp;amp;h=90&amp;amp;f=png&amp;amp;s=10148&#34; alt=&#34;&#34;&gt;
并将&lt;code&gt;draft：ture&lt;/code&gt;更改为&lt;code&gt;draft：false&lt;/code&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;5-hugo-&#34;&gt;5.启动 Hugo 服务器&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;hugo server -D&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;6&#34;&gt;6.建立静态页面&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;hugo -D&lt;/code&gt;
自动创建一个 public 目录。&lt;/p&gt;
&lt;h3 id=&#34;7-github&#34;&gt;7.上传至 github&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在 vscode 新建一个.gitignore，进入后输入
&lt;img src=&#34;https://user-gold-cdn.xitu.io/2020/1/4/16f7090c28139a8a?w=276&amp;amp;h=107&amp;amp;f=png&amp;amp;s=4268&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;终端下输入&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cd public/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git init&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git add .&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -v&lt;/code&gt;备注后关闭，第一篇文章就部署完毕。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 github 上新建仓库，名称为：&lt;code&gt;用户名.github.io&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;终端中输入
&lt;code&gt;git remote add origin git@github.com:github用户名/用户名.github.io.git&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git push -u origin master&lt;/code&gt;后，刷新页面即可&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;在 github settings 中找到 GitHub Pages，点击&lt;code&gt;https://github用户名.github.io/&lt;/code&gt;即可&lt;/li&gt;
&lt;/ol&gt;
</description>
      
    </item>
    
    <item>
      <title>HTML入门笔记</title>
      <link>http://localhost:1313/post/html%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Wed, 01 Jan 2020 21:59:13 +0800</pubDate>
      
      <guid>http://localhost:1313/post/html%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/</guid>
      
        <description>&lt;h2 id=&#34;-html--&#34;&gt;大家好，上星期在饥人谷学习了 HTML 的历史概述，语法和一些常用标签。前几天因为收拾东西回家，此笔记一直没有写完。今天整理完成后分享给大家，如有错误之处，欢迎指正！（没有奖励 😝）&lt;/h2&gt;
&lt;hr&gt;
&lt;h3 id=&#34;-html-&#34;&gt;首先是关于 HTML 的历史:&lt;/h3&gt;
&lt;p&gt;HTML（英文：HyperText Markup Language，中文：超文本标记语言）由英国计算机科学家 Timothy John Berners-Lee 创立，同时他也是万维网的发明者。而万维网（WWW）包括了 URL，HTML 以及 HTTP，本篇只简单介绍下 HTML。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;html-&#34;&gt;HTML 起手式&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;!+tab键即可出现下图代码；
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://user-gold-cdn.xitu.io/2020/1/3/16f6b8a34d79cf43?w=509&amp;amp;h=252&amp;amp;f=png&amp;amp;s=33005&#34; alt=&#34;&#34;&gt;
其中&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/code&gt;
为文档类型&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;&lt;/code&gt;
html 标签，可改 zh-cn&lt;/p&gt;
&lt;p&gt;而 head 标签内为看不到的元素。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;meta charset=&amp;quot;UTF-8&amp;quot; /&amp;gt;&lt;/code&gt;
字符编码&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot; /&amp;gt;&lt;/code&gt;
为防止页面缩放，用于兼容手机。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;meta http-equiv=&amp;quot;X-UA-Compatible&amp;quot; content=&amp;quot;ie=edge&amp;quot; /&amp;gt;&lt;/code&gt;
可要求 Ie 升级到最新内核（11）&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;&lt;/code&gt;
为标题&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;heading&#34;&gt;章节标签&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;标题 h1~h6&lt;/li&gt;
&lt;li&gt;章节 section&lt;/li&gt;
&lt;li&gt;文章 article&lt;/li&gt;
&lt;li&gt;段落 p&lt;/li&gt;
&lt;li&gt;头部 header&lt;/li&gt;
&lt;li&gt;脚部 footer&lt;/li&gt;
&lt;li&gt;主要 main&lt;/li&gt;
&lt;li&gt;旁支 aside&lt;/li&gt;
&lt;li&gt;划分 div&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;heading-1&#34;&gt;全局属性&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;class：类(class 找元素非常不方便)，推荐：
&lt;img src=&#34;https://user-gold-cdn.xitu.io/2020/1/3/16f6b9e46c1ea677?w=678&amp;amp;h=484&amp;amp;f=png&amp;amp;s=61754&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;contenteditable，可以让所有元素可编辑。&lt;code&gt;&amp;lt;div class=&amp;quot;middle bordered&amp;quot; contenteditable&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;note:
要想使 style 标签可见：放置 body 内，加&lt;code&gt;style{display:block;}&lt;/code&gt;
配合 contenteditable 可被编辑样式,这是个调试技巧，可以先显示再编辑。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;hidden：隐藏，比&lt;code&gt;display：block&lt;/code&gt;优先级高&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;id：不到万不得已，不用要 id，因为不会报错。（唯一性会误导别人）
简写为#xxx，js 可直接调用 id 元素，有些忌讳，新手不要用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;style：html 的属性，不是 css 的样式，还可通过 js 设置，js 会覆盖 html 的 style（js 优先级最高，html&amp;gt;css）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;tabindex：控制 tab 的顺序。（0 是最后访问，-1 是别访问）
&lt;img src=&#34;https://user-gold-cdn.xitu.io/2020/1/3/16f6ba06008daa35?w=1032&amp;amp;h=102&amp;amp;f=png&amp;amp;s=33221&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;title：可在开发者模式，有代码提示。
例：标题文字太多，想省略号隐藏。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://user-gold-cdn.xitu.io/2020/1/3/16f6ba0a5c66797b?w=594&amp;amp;h=282&amp;amp;f=png&amp;amp;s=49546&#34; alt=&#34;&#34;&gt;效果为：
&lt;img src=&#34;https://user-gold-cdn.xitu.io/2020/1/3/16f6ba101808df6b?w=726&amp;amp;h=90&amp;amp;f=png&amp;amp;s=8817&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;若要显示完整内容：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://user-gold-cdn.xitu.io/2020/1/3/16f6ba13b53b9899?w=736&amp;amp;h=174&amp;amp;f=png&amp;amp;s=43838&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;-css-&#34;&gt;默认样式（因为 css 还没出生）&lt;/h3&gt;
&lt;p&gt;查看：开发者工具，element-&amp;gt;style-&amp;gt;user agent stylesheet&lt;/p&gt;
&lt;h4 id=&#34;css-reset&#34;&gt;css reset(清除默认样式，加自己的样式)&lt;/h4&gt;
&lt;p&gt;方方老师常用 reset&lt;img src=&#34;https://user-gold-cdn.xitu.io/2020/1/3/16f6ba7cb8b2de8c?w=618&amp;amp;h=188&amp;amp;f=png&amp;amp;s=63122&#34; alt=&#34;&#34;&gt;
也可借鉴大厂源码：
开发者工具内找 h1h2h3h4…，连击 3 下复制，table 后删除。&lt;/p&gt;
&lt;p&gt;推荐加上如下图所示代码不加会非常丑&lt;img src=&#34;https://user-gold-cdn.xitu.io/2020/1/3/16f6ba41439aa9dd?w=292&amp;amp;h=155&amp;amp;f=png&amp;amp;s=15201&#34; alt=&#34;&#34;&gt;
输入 table+tab 键可快速打出下图代码：
&lt;img src=&#34;https://user-gold-cdn.xitu.io/2020/1/3/16f6bb9db09ceb82?w=205&amp;amp;h=95&amp;amp;f=png&amp;amp;s=6087&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;heading-2&#34;&gt;内容标签：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;ol：有顺序的列表，内只有 li（list item）&lt;/li&gt;
&lt;li&gt;ul：无顺序的列表，dl+tab 可生成所有结构&lt;/li&gt;
&lt;li&gt;dl：描述列表
&lt;ul&gt;
&lt;li&gt;dt：描述对象&lt;/li&gt;
&lt;li&gt;dd：描述数据内容&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;pre：保留所有空格，回车，tab（因为 tab，回车和多个空格会缩成一个空格）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;code:默认字体等宽，
pre 配合 code 使用，效果更佳。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;hr：分割线&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;br：换行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a：超链接&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;href：网址链接&lt;/li&gt;
&lt;li&gt;target：新窗口打开（国内常用）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;em：强调内容语气，默认斜体&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;strong：强调内容本身，默认加粗&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;quote：内联引用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;blockquote：块引用&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;heading-3&#34;&gt;第一次使用博客记录下学习笔记，感觉很乱，标签介绍也很简单，以后会边学习边仔细整理。&lt;/h2&gt;
</description>
      
    </item>
    
    <item>
      <title>开博大吉</title>
      <link>http://localhost:1313/post/%E5%BC%80%E5%8D%9A%E5%A4%A7%E5%90%89/</link>
      <pubDate>Fri, 27 Dec 2019 21:34:52 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E5%BC%80%E5%8D%9A%E5%A4%A7%E5%90%89/</guid>
      
        <description>&lt;h1 id=&#34;heading&#34;&gt;大家好，我的博客开通了，希望我能写出好文章给大家看&lt;/h1&gt;
</description>
      
    </item>
    
  </channel>
</rss>
